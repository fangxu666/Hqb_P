# 测试环境配置
spring.application.name=hqbService
server.servlet.context-path=/hqbService
server.port=8090

# 设置显示访问IP
eureka.instance.prefer-ip-address=true
# 设置服务名称
eureka.instance.instance-id=${spring.application.name}:${server.port}
# 每间隔10s，向服务端发送一次心跳，证明自己依然可用存活
eureka.instance.lease-renewal-interval-in-seconds=10
# 告诉服务端，如果我30s之内没有给你发心跳，就代表我的服务下线了变成不可用，将我踢出掉
eureka.instance.lease-expiration-duration-in-seconds=30
eureka.client.service-url.defaultZone=http://127.0.0.1:8761/eureka

# mybatis-plus配置信息
mybatis-plus.mapper-locations=classpath:mappers/*Mapper.xml
mybatis-plus.config-location=classpath:mybatis-config.xml
#mybatis-plus.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl
pagehelper.helperDialect=mysql
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=true
pagehelper.params=count=countSql

# 数据库连接及连接池的配置信息
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://115.29.248.154:3307/hf_hqb?useSSL=false
spring.datasource.password=hf_hqb
spring.datasource.username=hf_hqb
# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false

## 解决springboot、springcloud、mybatis中dataSource循环引用的问题
spring.cloud.refresh.refreshable=none

# 分布式事务配置地址
tx-lcn.client.manager-address=127.0.0.1:8070 